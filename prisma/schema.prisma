generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  firstname    String
  lastname     String
  email        String        @unique
  password     String
  phone        String?
  role         Role          @default(USER)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  appointments Appointment[]
}

model Product {
  id          String     @id @unique @default(uuid())
  brand       String
  name        String
  description String
  price       Float
  categories  Category[] @relation(name: "ProductCategory")
  stock       Int        @default(0)
  image       String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Category {
  id               String       @id @unique @default(uuid())
  name             String
  description      String
  image            String
  type             CategoryType
  products         Product[]    @relation(name: "ProductCategory")
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  services         Service[]    @relation(name: "ServiceCategory")
  categoryParent   Category?    @relation("CategoryChildRelation", fields: [parentId], references: [id])
  categoryChildren Category[]   @relation("CategoryChildRelation")
  parentId         String?
}

model Service {
  id           String        @id @unique @default(uuid())
  name         String
  description  String
  price        Float
  duration     Int
  image        String
  appointments Appointment[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  categoryId   String
  category     Category      @relation("ServiceCategory", fields: [categoryId], references: [id])
}

model Appointment {
  id        String   @id @unique @default(uuid())
  service   Service  @relation(fields: [serviceId], references: [id])
  serviceId String
  date      DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

enum Role {
  USER
  ADMIN
}

enum CategoryType {
  PRODUCT
  SERVICE
}
